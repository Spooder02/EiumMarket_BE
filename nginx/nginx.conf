# nginx/nginx.conf

events {}

http {
    # 요청을 전달할 서버 그룹 정의
    # springboot_app 부분만 남깁니다.
    upstream springboot_app {
        server springboot-service:8080;
    }
    
    upstream flask_app {
        server flask-service:5000;
    }

    

    server {
        listen 80;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            proxy_pass http://springboot_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 10M;
        }

        location /ai/ {
            proxy_pass http://flask_app/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


    }

    server {
        listen 443 ssl;
        server_name geonnie-be.space;

        ssl_certificate /etc/letsencrypt/live/geonnie-be.space/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/geonnie-be.space/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            proxy_pass http://springboot_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 10M;
        }

        location /ai/ {
            proxy_pass http://flask_app/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
